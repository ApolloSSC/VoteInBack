// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlow.GeneratedTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class JugementMajoritaireFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "JugementMajoritaire", "\tEn tant que client de l\'API à la clôture d\'un scrutin \r\n\tJe souhaite calculer le" +
                    " résultat du scrutin\r\n\tPour obtenir la liste des résultats", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "JugementMajoritaire")))
            {
                SpecFlow.GeneratedTests.Features.JugementMajoritaireFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Scrutin"});
            table1.AddRow(new string[] {
                        "Scrutin 1"});
            table1.AddRow(new string[] {
                        "Scrutin 2"});
            testRunner.Given("Une liste de scrutin", ((string)(null)), table1, "Given ");
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Nom",
                        "Valeur"});
            table2.AddRow(new string[] {
                        "A rejeter",
                        "0"});
            table2.AddRow(new string[] {
                        "Passable",
                        "1"});
            table2.AddRow(new string[] {
                        "Correct",
                        "2"});
            table2.AddRow(new string[] {
                        "Assez bien",
                        "3"});
            table2.AddRow(new string[] {
                        "Bien",
                        "4"});
            table2.AddRow(new string[] {
                        "Très bien",
                        "5"});
            table2.AddRow(new string[] {
                        "Excellent",
                        "6"});
            testRunner.And("les choix suivants", ((string)(null)), table2, "And ");
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "JugementMajoritaire")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        public virtual void JugementMajoritaireIdentifierCandidatVainqueur()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("JugementMajoritaire Identifier candidat vainqueur", new string[] {
                        "mytag"});
            this.ScenarioSetup(scenarioInfo);
            this.FeatureBackground();
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Nom"});
            table3.AddRow(new string[] {
                        "candidat 1"});
            table3.AddRow(new string[] {
                        "candidat 2"});
            testRunner.Given("les options suivantes pour le scrutin \"Scrutin 1\"", ((string)(null)), table3, "Given ");
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Option",
                        "Choix",
                        "Electeur"});
            table4.AddRow(new string[] {
                        "candidat 1",
                        "Très bien",
                        "electeur 1"});
            table4.AddRow(new string[] {
                        "candidat 1",
                        "Bien",
                        "electeur 2"});
            table4.AddRow(new string[] {
                        "candidat 1",
                        "Bien",
                        "electeur 3"});
            table4.AddRow(new string[] {
                        "candidat 1",
                        "Excellent",
                        "electeur 4"});
            table4.AddRow(new string[] {
                        "candidat 1",
                        "Excellent",
                        "electeur 5"});
            table4.AddRow(new string[] {
                        "candidat 1",
                        "Passable",
                        "electeur 6"});
            table4.AddRow(new string[] {
                        "candidat 2",
                        "Assez bien",
                        "electeur 1"});
            table4.AddRow(new string[] {
                        "candidat 2",
                        "Correct",
                        "electeur 2"});
            table4.AddRow(new string[] {
                        "candidat 2",
                        "Excellent",
                        "electeur 3"});
            table4.AddRow(new string[] {
                        "candidat 2",
                        "Passable",
                        "electeur 4"});
            table4.AddRow(new string[] {
                        "candidat 2",
                        "Passable",
                        "electeur 5"});
            table4.AddRow(new string[] {
                        "candidat 2",
                        "Passable",
                        "electeur 6"});
            testRunner.And("les votes des electeurs pour le \"Scrutin 1\"", ((string)(null)), table4, "And ");
            testRunner.When("je clôture le \"Scrutin 1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Option",
                        "Mediane",
                        "Pourcentage inferieur",
                        "Pourcentage superieur"});
            table5.AddRow(new string[] {
                        "candidat 1",
                        "Bien",
                        "16.67",
                        "50"});
            table5.AddRow(new string[] {
                        "candidat 2",
                        "Passable",
                        "0",
                        "50"});
            testRunner.Then("j\'obtiens la médiane pour chaque candidat", ((string)(null)), table5, "Then ");
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Option",
                        "Choix",
                        "NombreDeVote"});
            table6.AddRow(new string[] {
                        "candidat 1",
                        "A rejeter",
                        "0"});
            table6.AddRow(new string[] {
                        "candidat 1",
                        "Passable",
                        "1"});
            table6.AddRow(new string[] {
                        "candidat 1",
                        "Correct",
                        "0"});
            table6.AddRow(new string[] {
                        "candidat 1",
                        "Assez bien",
                        "0"});
            table6.AddRow(new string[] {
                        "candidat 1",
                        "Bien",
                        "2"});
            table6.AddRow(new string[] {
                        "candidat 1",
                        "Très bien",
                        "1"});
            table6.AddRow(new string[] {
                        "candidat 1",
                        "Excellent",
                        "2"});
            table6.AddRow(new string[] {
                        "candidat 2",
                        "A rejeter",
                        "0"});
            table6.AddRow(new string[] {
                        "candidat 2",
                        "Passable",
                        "3"});
            table6.AddRow(new string[] {
                        "candidat 2",
                        "Correct",
                        "1"});
            table6.AddRow(new string[] {
                        "candidat 2",
                        "Assez bien",
                        "1"});
            table6.AddRow(new string[] {
                        "candidat 2",
                        "Bien",
                        "0"});
            table6.AddRow(new string[] {
                        "candidat 2",
                        "Très bien",
                        "0"});
            table6.AddRow(new string[] {
                        "candidat 2",
                        "Excellent",
                        "1"});
            testRunner.And("le détail", ((string)(null)), table6, "And ");
            testRunner.And("le nom du vainqueur est \'candidat 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Scrutin",
                        "Nombre votants",
                        "Valide",
                        "Vainqueur"});
            table7.AddRow(new string[] {
                        "Scrutin 1",
                        "6",
                        "oui",
                        "candidat 1"});
            testRunner.And("le resultat est enregistré en base de données", ((string)(null)), table7, "And ");
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "JugementMajoritaire")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        public virtual void JugementMajoritaireIdentifierCandidatVainqueurApresEgaliteMediane()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("JugementMajoritaire Identifier candidat vainqueur après égalité mediane", new string[] {
                        "mytag"});
            this.ScenarioSetup(scenarioInfo);
            this.FeatureBackground();
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Nom"});
            table8.AddRow(new string[] {
                        "candidat 1"});
            table8.AddRow(new string[] {
                        "candidat 2"});
            table8.AddRow(new string[] {
                        "candidat 3"});
            testRunner.Given("les options suivantes pour le scrutin \"Scrutin 1\"", ((string)(null)), table8, "Given ");
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Option",
                        "Choix",
                        "Electeur"});
            table9.AddRow(new string[] {
                        "candidat 1",
                        "Très bien",
                        "electeur 1"});
            table9.AddRow(new string[] {
                        "candidat 1",
                        "Bien",
                        "electeur 2"});
            table9.AddRow(new string[] {
                        "candidat 1",
                        "Bien",
                        "electeur 3"});
            table9.AddRow(new string[] {
                        "candidat 1",
                        "Excellent",
                        "electeur 4"});
            table9.AddRow(new string[] {
                        "candidat 1",
                        "Excellent",
                        "electeur 5"});
            table9.AddRow(new string[] {
                        "candidat 1",
                        "Passable",
                        "electeur 6"});
            table9.AddRow(new string[] {
                        "candidat 2",
                        "Assez bien",
                        "electeur 1"});
            table9.AddRow(new string[] {
                        "candidat 2",
                        "Correct",
                        "electeur 2"});
            table9.AddRow(new string[] {
                        "candidat 2",
                        "Excellent",
                        "electeur 3"});
            table9.AddRow(new string[] {
                        "candidat 2",
                        "Passable",
                        "electeur 4"});
            table9.AddRow(new string[] {
                        "candidat 2",
                        "Passable",
                        "electeur 5"});
            table9.AddRow(new string[] {
                        "candidat 2",
                        "Passable",
                        "electeur 6"});
            table9.AddRow(new string[] {
                        "candidat 3",
                        "Assez bien",
                        "electeur 1"});
            table9.AddRow(new string[] {
                        "candidat 3",
                        "Excellent",
                        "electeur 2"});
            table9.AddRow(new string[] {
                        "candidat 3",
                        "Passable",
                        "electeur 3"});
            table9.AddRow(new string[] {
                        "candidat 3",
                        "Bien",
                        "electeur 4"});
            table9.AddRow(new string[] {
                        "candidat 3",
                        "Bien",
                        "electeur 5"});
            table9.AddRow(new string[] {
                        "candidat 3",
                        "Très bien",
                        "electeur 6"});
            testRunner.And("les votes des electeurs pour le \"Scrutin 1\"", ((string)(null)), table9, "And ");
            testRunner.When("je clôture le \"Scrutin 1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Option",
                        "Mediane",
                        "Pourcentage inferieur",
                        "Pourcentage superieur"});
            table10.AddRow(new string[] {
                        "candidat 1",
                        "Bien",
                        "16.67",
                        "50"});
            table10.AddRow(new string[] {
                        "candidat 2",
                        "Passable",
                        "0",
                        "50"});
            table10.AddRow(new string[] {
                        "candidat 3",
                        "Bien",
                        "33.33",
                        "33.33"});
            testRunner.Then("j\'obtiens la médiane pour chaque candidat", ((string)(null)), table10, "Then ");
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Option",
                        "Choix",
                        "NombreDeVote"});
            table11.AddRow(new string[] {
                        "candidat 1",
                        "A rejeter",
                        "0"});
            table11.AddRow(new string[] {
                        "candidat 1",
                        "Passable",
                        "1"});
            table11.AddRow(new string[] {
                        "candidat 1",
                        "Correct",
                        "0"});
            table11.AddRow(new string[] {
                        "candidat 1",
                        "Assez bien",
                        "0"});
            table11.AddRow(new string[] {
                        "candidat 1",
                        "Bien",
                        "2"});
            table11.AddRow(new string[] {
                        "candidat 1",
                        "Très bien",
                        "1"});
            table11.AddRow(new string[] {
                        "candidat 1",
                        "Excellent",
                        "2"});
            table11.AddRow(new string[] {
                        "candidat 2",
                        "A rejeter",
                        "0"});
            table11.AddRow(new string[] {
                        "candidat 2",
                        "Passable",
                        "3"});
            table11.AddRow(new string[] {
                        "candidat 2",
                        "Correct",
                        "1"});
            table11.AddRow(new string[] {
                        "candidat 2",
                        "Assez bien",
                        "1"});
            table11.AddRow(new string[] {
                        "candidat 2",
                        "Bien",
                        "0"});
            table11.AddRow(new string[] {
                        "candidat 2",
                        "Très bien",
                        "0"});
            table11.AddRow(new string[] {
                        "candidat 2",
                        "Excellent",
                        "1"});
            table11.AddRow(new string[] {
                        "candidat 3",
                        "A rejeter",
                        "0"});
            table11.AddRow(new string[] {
                        "candidat 3",
                        "Passable",
                        "1"});
            table11.AddRow(new string[] {
                        "candidat 3",
                        "Correct",
                        "0"});
            table11.AddRow(new string[] {
                        "candidat 3",
                        "Assez bien",
                        "1"});
            table11.AddRow(new string[] {
                        "candidat 3",
                        "Bien",
                        "2"});
            table11.AddRow(new string[] {
                        "candidat 3",
                        "Très bien",
                        "1"});
            table11.AddRow(new string[] {
                        "candidat 3",
                        "Excellent",
                        "1"});
            testRunner.And("le détail", ((string)(null)), table11, "And ");
            testRunner.And("le nom du vainqueur est \'candidat 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Scrutin",
                        "Nombre votants",
                        "Valide",
                        "Vainqueur"});
            table12.AddRow(new string[] {
                        "Scrutin 1",
                        "6",
                        "oui",
                        "candidat 1"});
            testRunner.And("le resultat est enregistré en base de données", ((string)(null)), table12, "And ");
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "JugementMajoritaire")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        public virtual void JugementMajoritaireIdentifierCandidatVainqueurApresEgaliteMedianeEtPourcentageInf()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("JugementMajoritaire Identifier candidat vainqueur après égalité mediane et pource" +
                    "ntage inf", new string[] {
                        "mytag"});
            this.ScenarioSetup(scenarioInfo);
            this.FeatureBackground();
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Nom"});
            table13.AddRow(new string[] {
                        "candidat 1"});
            table13.AddRow(new string[] {
                        "candidat 3"});
            testRunner.Given("les options suivantes pour le scrutin \"Scrutin 1\"", ((string)(null)), table13, "Given ");
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Option",
                        "Choix",
                        "Electeur"});
            table14.AddRow(new string[] {
                        "candidat 1",
                        "Très bien",
                        "electeur 1"});
            table14.AddRow(new string[] {
                        "candidat 1",
                        "Bien",
                        "electeur 2"});
            table14.AddRow(new string[] {
                        "candidat 1",
                        "Bien",
                        "electeur 3"});
            table14.AddRow(new string[] {
                        "candidat 1",
                        "Excellent",
                        "electeur 4"});
            table14.AddRow(new string[] {
                        "candidat 1",
                        "Excellent",
                        "electeur 5"});
            table14.AddRow(new string[] {
                        "candidat 1",
                        "Passable",
                        "electeur 6"});
            table14.AddRow(new string[] {
                        "candidat 3",
                        "Bien",
                        "electeur 1"});
            table14.AddRow(new string[] {
                        "candidat 3",
                        "Excellent",
                        "electeur 2"});
            table14.AddRow(new string[] {
                        "candidat 3",
                        "Passable",
                        "electeur 3"});
            table14.AddRow(new string[] {
                        "candidat 3",
                        "Bien",
                        "electeur 4"});
            table14.AddRow(new string[] {
                        "candidat 3",
                        "Bien",
                        "electeur 5"});
            table14.AddRow(new string[] {
                        "candidat 3",
                        "Très bien",
                        "electeur 6"});
            testRunner.And("les votes des electeurs pour le \"Scrutin 1\"", ((string)(null)), table14, "And ");
            testRunner.When("je clôture le \"Scrutin 1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Option",
                        "Mediane",
                        "Pourcentage inferieur",
                        "Pourcentage superieur"});
            table15.AddRow(new string[] {
                        "candidat 1",
                        "Bien",
                        "16.67",
                        "50"});
            table15.AddRow(new string[] {
                        "candidat 3",
                        "Bien",
                        "16.67",
                        "33.33"});
            testRunner.Then("j\'obtiens la médiane pour chaque candidat", ((string)(null)), table15, "Then ");
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Option",
                        "Choix",
                        "NombreDeVote"});
            table16.AddRow(new string[] {
                        "candidat 1",
                        "A rejeter",
                        "0"});
            table16.AddRow(new string[] {
                        "candidat 1",
                        "Passable",
                        "1"});
            table16.AddRow(new string[] {
                        "candidat 1",
                        "Correct",
                        "0"});
            table16.AddRow(new string[] {
                        "candidat 1",
                        "Assez bien",
                        "0"});
            table16.AddRow(new string[] {
                        "candidat 1",
                        "Bien",
                        "2"});
            table16.AddRow(new string[] {
                        "candidat 1",
                        "Très bien",
                        "1"});
            table16.AddRow(new string[] {
                        "candidat 1",
                        "Excellent",
                        "2"});
            table16.AddRow(new string[] {
                        "candidat 3",
                        "A rejeter",
                        "0"});
            table16.AddRow(new string[] {
                        "candidat 3",
                        "Passable",
                        "1"});
            table16.AddRow(new string[] {
                        "candidat 3",
                        "Correct",
                        "0"});
            table16.AddRow(new string[] {
                        "candidat 3",
                        "Assez bien",
                        "0"});
            table16.AddRow(new string[] {
                        "candidat 3",
                        "Bien",
                        "3"});
            table16.AddRow(new string[] {
                        "candidat 3",
                        "Très bien",
                        "1"});
            table16.AddRow(new string[] {
                        "candidat 3",
                        "Excellent",
                        "1"});
            testRunner.And("le détail", ((string)(null)), table16, "And ");
            testRunner.And("le nom du vainqueur est \'candidat 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Scrutin",
                        "Nombre votants",
                        "Valide",
                        "Vainqueur"});
            table17.AddRow(new string[] {
                        "Scrutin 1",
                        "6",
                        "oui",
                        "candidat 1"});
            testRunner.And("le resultat est enregistré en base de données", ((string)(null)), table17, "And ");
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "JugementMajoritaire")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        public virtual void JugementMajoritairePasDeCandidatVainqueurApresEgaliteParfaite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("JugementMajoritaire pas de candidat vainqueur après égalité parfaite", new string[] {
                        "mytag"});
            this.ScenarioSetup(scenarioInfo);
            this.FeatureBackground();
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Nom"});
            table18.AddRow(new string[] {
                        "candidat 1"});
            table18.AddRow(new string[] {
                        "candidat 3"});
            testRunner.Given("les options suivantes pour le scrutin \"Scrutin 1\"", ((string)(null)), table18, "Given ");
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Option",
                        "Choix",
                        "Electeur"});
            table19.AddRow(new string[] {
                        "candidat 1",
                        "Très bien",
                        "electeur 1"});
            table19.AddRow(new string[] {
                        "candidat 1",
                        "Bien",
                        "electeur 2"});
            table19.AddRow(new string[] {
                        "candidat 1",
                        "Bien",
                        "electeur 3"});
            table19.AddRow(new string[] {
                        "candidat 1",
                        "Excellent",
                        "electeur 4"});
            table19.AddRow(new string[] {
                        "candidat 1",
                        "Excellent",
                        "electeur 5"});
            table19.AddRow(new string[] {
                        "candidat 1",
                        "Passable",
                        "electeur 6"});
            table19.AddRow(new string[] {
                        "candidat 3",
                        "Très bien",
                        "electeur 1"});
            table19.AddRow(new string[] {
                        "candidat 3",
                        "Bien",
                        "electeur 2"});
            table19.AddRow(new string[] {
                        "candidat 3",
                        "Bien",
                        "electeur 3"});
            table19.AddRow(new string[] {
                        "candidat 3",
                        "Excellent",
                        "electeur 4"});
            table19.AddRow(new string[] {
                        "candidat 3",
                        "Excellent",
                        "electeur 5"});
            table19.AddRow(new string[] {
                        "candidat 3",
                        "Passable",
                        "electeur 6"});
            testRunner.And("les votes des electeurs pour le \"Scrutin 1\"", ((string)(null)), table19, "And ");
            testRunner.When("je clôture le \"Scrutin 1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Option",
                        "Mediane",
                        "Pourcentage inferieur",
                        "Pourcentage superieur"});
            table20.AddRow(new string[] {
                        "candidat 1",
                        "Bien",
                        "16.67",
                        "50"});
            table20.AddRow(new string[] {
                        "candidat 3",
                        "Bien",
                        "16.67",
                        "50"});
            testRunner.Then("j\'obtiens la médiane pour chaque candidat", ((string)(null)), table20, "Then ");
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Option",
                        "Choix",
                        "NombreDeVote"});
            table21.AddRow(new string[] {
                        "candidat 1",
                        "A rejeter",
                        "0"});
            table21.AddRow(new string[] {
                        "candidat 1",
                        "Passable",
                        "1"});
            table21.AddRow(new string[] {
                        "candidat 1",
                        "Correct",
                        "0"});
            table21.AddRow(new string[] {
                        "candidat 1",
                        "Assez bien",
                        "0"});
            table21.AddRow(new string[] {
                        "candidat 1",
                        "Bien",
                        "2"});
            table21.AddRow(new string[] {
                        "candidat 1",
                        "Très bien",
                        "1"});
            table21.AddRow(new string[] {
                        "candidat 1",
                        "Excellent",
                        "2"});
            table21.AddRow(new string[] {
                        "candidat 3",
                        "A rejeter",
                        "0"});
            table21.AddRow(new string[] {
                        "candidat 3",
                        "Passable",
                        "1"});
            table21.AddRow(new string[] {
                        "candidat 3",
                        "Correct",
                        "0"});
            table21.AddRow(new string[] {
                        "candidat 3",
                        "Assez bien",
                        "0"});
            table21.AddRow(new string[] {
                        "candidat 3",
                        "Bien",
                        "2"});
            table21.AddRow(new string[] {
                        "candidat 3",
                        "Très bien",
                        "1"});
            table21.AddRow(new string[] {
                        "candidat 3",
                        "Excellent",
                        "2"});
            testRunner.And("le détail", ((string)(null)), table21, "And ");
            testRunner.And("on a pas de vainqueur", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Scrutin",
                        "Nombre votants",
                        "Valide",
                        "Vainqueur"});
            table22.AddRow(new string[] {
                        "Scrutin 1",
                        "6",
                        "non",
                        "aucun"});
            testRunner.And("le resultat est enregistré en base de données", ((string)(null)), table22, "And ");
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "JugementMajoritaire")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        public virtual void JugementMajoritaireScrutinDejaCloture()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("JugementMajoritaire scrutin déjà cloturé", new string[] {
                        "mytag"});
            this.ScenarioSetup(scenarioInfo);
            this.FeatureBackground();
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Nom"});
            table23.AddRow(new string[] {
                        "candidat 1"});
            testRunner.Given("les options suivantes pour le scrutin \"Scrutin 1\"", ((string)(null)), table23, "Given ");
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Option",
                        "Choix",
                        "Electeur"});
            table24.AddRow(new string[] {
                        "candidat 1",
                        "Très bien",
                        "electeur 1"});
            table24.AddRow(new string[] {
                        "candidat 1",
                        "Bien",
                        "electeur 2"});
            table24.AddRow(new string[] {
                        "candidat 1",
                        "Bien",
                        "electeur 3"});
            table24.AddRow(new string[] {
                        "candidat 1",
                        "Excellent",
                        "electeur 4"});
            table24.AddRow(new string[] {
                        "candidat 1",
                        "Excellent",
                        "electeur 5"});
            table24.AddRow(new string[] {
                        "candidat 1",
                        "Passable",
                        "electeur 6"});
            testRunner.And("les votes des electeurs pour le \"Scrutin 1\"", ((string)(null)), table24, "And ");
            testRunner.When("je clôture le \"Scrutin 1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            testRunner.When("je clôture le \"Scrutin 1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            testRunner.Then("on obtiens le message \"Ce scrutin est déja cloturé\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
